#labels unittest,ztest,testing,C,program
<li><strong>1. ZTest是什么？</strong></li>
ZTest是一个轻量级的c++程序单元测试框架

<li><strong>2. 如何获得ZTest?</strong></li>
可以从google code：<a href="http://xiao5geproject.googlecode.com/svn/trunk/ztest">http://xiao5geproject.googlecode.com/svn/trunk/ztest</a> 处获得ZTest的源码。

<li><strong>3. 如何使用ZTest?</strong></li>使用ZTest要遵循以下几个步骤：

（1）包含ztest.h: 
<pre lang="cpp" line="1">
#include "ztest.h"
</pre>
（2）声明测试类和测试用例
<pre lang="cpp" line="1">
Z_BEGIN_TEST_CLASS(Test)
	Z_DECLARE_TEST_CASE(Global, Add)
	Z_DECLARE_TEST_CASE(Class, Add)
Z_END_TEST_CLASS()
</pre>
（3）定义测试对象
<pre lang="cpp" line="1">
Z_DEFINE_TEST_OBJECT(Test, tester)
</pre>
（4）定义测试用例
<pre lang="cpp" line="1">
Z_DEFINE_TEST_CASE(Test, tester, Global, Add)
{
	Z_EXPECT_EQ(1 - 3, 2);
}

class Test
{
public:
	int Add(int a, int b)
	{
		return a + b;
	}
};

Z_DEFINE_TEST_CASE(Test, tester, Class, Add)
{
	Test test;
	Z_EXPECT_TRUE(test.Add(3, -4) == -1);
}
</pre>
（5）运行测试用例
<pre lang="cpp" line="1">
int main()
{
	Z_RUN_ALL_TESTCASES(tester);
}
</pre>
（6）编译运行单元测试程序：
<pre lang="shell" line="1">
Running test case: Global/Add    [Check failed] 1 - 3 == 2
Running test case: Class/Add     [Passed]
Tatal 2 cases, passed 1
</pre>

4. 如果你在用的过程中发现什么bug或者有什么好的改进建议，请到<a href="http://www.wuzesheng.com/?p=1400">http://www.wuzesheng.com/?p=1400</a>留言，谢谢！